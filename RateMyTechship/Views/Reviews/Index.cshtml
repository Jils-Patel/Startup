@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager
@inject SignInManager<AppUser> SignInManager

@model IEnumerable<RateMyTechship.Models.Review>

@{
    ViewData["Title"] = "Index";
}

@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor

<div class="row">
    <div class="col-md-4">
        <form asp-action="ShowSearchResults">
            <div class="form-group" style="margin-bottom: 20px;">
                <label for="SearchPhrase" class="control-label"></label>
                <input name="SearchPhrase" class="form-control" placeholder="Enter search term here" />
            </div>
            <div class="form-group d-flex align-items-center justify-content-between">
                <input type="submit" value="Search" class="btn btn-primary" style="font-weight: bold; color: black; background-color: orange; outline: none; border: none;"/>
                <p style="margin: 0;">
                    <a asp-action="Create" style="font-weight: bold; outline: black; text-decoration: none; color: black; background-color: lightblue; border-radius: 4px; font-size: 18px; padding: 6px 6px; margin-left: -100px;">Write a Review</a>
                </p>
            </div>
        </form>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info" role="alert" style="margin-top: 20px;">
        No results found. Help others by sharing your experience.
        <a asp-action="Create" class="alert-link">Write a review now!</a>
    </div>
}

<div class="container" style="margin-top: 30px; color: black; margin-bottom: 120px;">
    @foreach (var item in Model.Reverse())
    {
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="card shadow-sm">
                    <div class="card-body"> @* style="height: 370px; overflow-y: auto;"> *@
                        <div class="row">
                            <div class="col-12 col-md-1">
                                <p class="card-text" style="margin-top: 24px;">
                                    <strong style="font-size: 19px; font-weight: bold;">Rating</strong>
                                </p>
                                <p class="card-text" style="font-size: 20px; font-weight: bold; margin-top: -10px;">
                                    <span class="rating" style="background-color: @(item.Rating <= 2 ? "#FF9999" : item.Rating <= 3 ? "#FFFF99" : "#99FF99"); display: inline-block; padding: 4px 8px; border-radius: 4px;">@Html.DisplayFor(modelItem => item.Rating) / 5</span>
                                </p>
                            </div>
                            <div class="col-12 col-md-11">
                                <p class="card-text" style="text-align: right; margin: 0;"><strong>@Html.DisplayFor(modelItem => item.CreationDate)</strong></p>
                                <h5 class="card-title" style="font-size: 30px;">@Html.DisplayFor(modelItem => item.Position)</h5>
                                <div class="d-md-none mb-2">
                                    <!-- Visible only on smaller screens -->
                                    <p class="card-text">Company: <strong>@Html.DisplayFor(modelItem => item.CompanyName)</strong></p>
                                    <p class="card-text">Period: <strong>@Html.DisplayFor(modelItem => item.Duration)</strong></p>
                                    <p class="card-text">Work Environment: <strong>@Html.DisplayFor(modelItem => item.WorkCulture)</strong></p>
                                    <p class="card-text">Mentorship: <strong>@Html.DisplayFor(modelItem => item.Workload)</strong></p>
                                    <p class="card-text">Learning Oppurtunities: <strong>@Html.DisplayFor(modelItem => item.LearningOpportunities)</strong></p>
                                    <p class="card-text">Networking Oppurtunities: <strong>@Html.DisplayFor(modelItem => item.NetworkingOpportunities)</strong></p>
                                </div>
                                <div class="d-none d-md-block">
                                    <!-- Visible only on larger screens -->
                                    <div>
                                        <p class="card-text" style="display: inline-block;">Company: <strong>@Html.DisplayFor(modelItem => item.CompanyName)</strong></p>
                                        <p class="card-text" style="display: inline-block; margin-left: 20px;">Period: <strong>@Html.DisplayFor(modelItem => item.Duration)</strong></p>
                                        <p class="card-text" style="display: inline-block; margin-left: 20px;">Work Environment: <strong>@Html.DisplayFor(modelItem => item.WorkCulture)</strong></p>
                                        <p class="card-text" style="display: inline-block; margin-left: 20px;">Mentorship: <strong>@Html.DisplayFor(modelItem => item.Workload)</strong></p>
                                    </div>
                                    <div>
                                        <p class="card-text" style="display: inline-block;">Learning Opportunities: <strong>@Html.DisplayFor(modelItem => item.LearningOpportunities)</strong></p>
                                        <p class="card-text" style="display: inline-block; margin-left: 20px;">Networking Opportunities: <strong>@Html.DisplayFor(modelItem => item.NetworkingOpportunities)</strong></p>
                                    </div>
                                </div>

                                <p class="card-text">@Html.DisplayFor(modelItem => item.InternshipReview)</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-end align-items-center">
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm custom-edit-button">View Details</a>
                            <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm custom-edit-button">Delete</a>
                        }
                        @if (User.IsInRole("Admin") || (User.Identity.IsAuthenticated && item.AuthorId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
                        {
                            <div class="form-group" style="margin-top: 20px;">
                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm custom-edit-button">Edit</a>
                            </div>
                        }
                        <button class="btn btn-sm btn-outline-success" onclick="likeReview(@item.ID)" id="likeButton_@item.ID" style="outline: none; border: none; font-size: 20px;">
                            <i class="fas fa-thumbs-up" id="likeIcon_@item.ID" style="font-size: 20px; color: black; outline: black; border: black"></i>
                        </button>
                        <span id="likeCount_@item.ID" style="margin-left: 5px; margin-right: 15px;">@item.Likes</span>
                        <button class="btn btn-sm btn-outline-danger" onclick="dislikeReview(@item.ID)" id="dislikeButton_@item.ID" style="outline: none; border: none; font-size: 20px;">
                            <i class="fas fa-thumbs-down" id="dislikeIcon_@item.ID" style="font-size: 20px;  color: black; outline: black; border: black"></i>
                        </button>
                        <span id="dislikeCount_@item.ID" style="margin-left: 5px;">@item.Dislike</span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
.custom-edit-button {
    background-color: white;
    color: black;
    font-size: 16px;
    padding: 5px 10px;
    border-radius: 5px;
    border: 2px solid black; /* Black border */
    text-decoration: none; /* Removes the underline */
    display: inline-block; /* Ensures the button behaves like a button */
    margin-right: 15px;
}

.custom-edit-button:hover {
    background-color: black; /* Change background color on hover */
    color: white; /* Change text color on hover */
}
</style>


<script>
    var isAuthenticated = '@User.Identity.IsAuthenticated'.toLowerCase() === 'true';

    function likeReview(reviewId) {
        if (!isAuthenticated) {
            window.location.href = '/Identity/Account/Login'; // Redirect to login page
            return;
        }

        $.ajax({
            type: "POST",
            data: { reviewId: reviewId },
            url: '/Reviews/Like',
            success: function (response) {
                $('#likeCount_' + reviewId).text(response.likesCount);
                $('#dislikeCount_' + reviewId).text(response.dislikesCount);

                // Update button styles based on current state
                if (response.likedByCurrentUser) {
                    $('#likeIcon_' + reviewId).css('color', 'green');
                    $('#dislikeIcon_' + reviewId).css('color', 'black');
                } else {
                    $('#likeIcon_' + reviewId).css('color', 'black');
                }
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

    function dislikeReview(reviewId) {
        if (!isAuthenticated) {
            window.location.href = '/Identity/Account/Login'; // Redirect to login page
            return;
        }

        $.ajax({
            type: "POST",
            data: { reviewId: reviewId },
            url: '/Reviews/Dislike',
            success: function (response) {
                $('#likeCount_' + reviewId).text(response.likesCount);
                $('#dislikeCount_' + reviewId).text(response.dislikesCount);

                // Update button styles based on current state
                if (response.dislikedByCurrentUser) {
                    $('#dislikeIcon_' + reviewId).css('color', 'red');
                    $('#likeIcon_' + reviewId).css('color', 'black');
                } else {
                    $('#dislikeIcon_' + reviewId).css('color', 'black');
                }
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }
</script>
















